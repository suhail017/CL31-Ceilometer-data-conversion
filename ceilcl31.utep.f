        program ceilcl31utep
        parameter (maxpoints=10000,nlvl=385)
        character*128 arqlst,arqout,arqout2,arqin,arqlog,clixo,arqraw
        character line0*20,line1*11,line3*44,line4*47
        character warn*1,clvl(3)*5,cnclvl
        integer month,day,hour,minute,second
        integer jday,jday_ts,yy,yy_ts
        integer istat(maxpoints,12),idat(nlvl),iwarn
        integer ncl(3)
        real djd,hhdec,hhdec_fim
        real dat(maxpoints,nlvl),dat_p(nlvl)
        real clbase(maxpoints,3),clbase_p(3),stat(maxpoints,8)
        logical primeiro,verbose,geraraw
c       
        open(1,file="ceilcl31.utep.par")
        read(1,*) arqlst
        read(1,*) arqout2
        read(1,*) geraraw
        read(1,*) iper
        read(1,*) verbose
        close(1)
        nletra = len_trim(arqout2)
        print *,nletra
        arqout = arqout2(1:nletra) // '.cl31.dat'
        arqlog = arqout2(1:nletra) // '.cl31.log'

        print *,arqlst(1:len_trim(arqlst))," ",
     &          arqlog(1:len_trim(arqlog))," ",
     &          arqout(1:len_trim(arqout))," ", iper
c          read(*,*) lixo
        
c       initializing some parameters:
        nval=1
        primeiro = .TRUE.

c       openning files
        open(1,file=arqlst(1:len_trim(arqlst)))
        open(7,file=arqout(1:len_trim(arqout)))
c        open(8,file=arqlog(1:len_trim(arqlog)))
        open(9,file=arqlog)

c       writting headers
        write(7,*) "Generated by program ceilc31.utep.f"
        write(7,*) "Time stamp at the beginning of interval"
        write(7,*) "yy dd(GMT) ntot nceil1 nceil2 nceil3 ",
     &             "ceil1(m) ceil2(m) ceil3(m) ",
     &             "backscatter(1) ... backscatter(385)"

c         going through files now
          print *,"entrando no arqin"
11        read(1,'(a128)',end=99) arqin
          if(verbose) then
c             print *,"file: ",arqin(1:len_trim(arqin))
          endif
          open(2,file=arqin(1:len_trim(arqin)))

c         saving raw file when geraraw is TRUE
          if  (geraraw) then
              nletra = len_trim(arqin)
              arqraw = arqin((nletra-24):(nletra-3)) // "raw"
ccc              print *,(arqraw,1,len_trim(arqraw))
ccc              read(*,*) lixo
              open(8,file=arqraw(1:len_trim(arqin)))
                   write(8,*) "Generaged by program ceilcl31"
                   write(8,*) "yy dd(GMT) ",
     &                        "warn istat(1) ... istat(12) ",
     &                        "ceil1(m) ceil2(m) ceil3(m) ",
     &                        "backscatter(1) ... backscatter(385)"
              print *,"opening raw file: ",arqraw
          endif
c         Two lines at the beginning of the file
          read(2,'(a120)',end=50) clixo
          if(verbose) print*, clixo
          read(2,'(a120)',end=50) clixo
          if(verbose) print*, clixo
c          read(*,*) lixo

c         line 0 - time stamp ---------------------------
40            read(2,1001,end=50) line0
1001          format(a20)
              write(9,*) line0
c             Beginning of the loop inside the file, at the end of this loop
c                 the prog. will read till find the next time stamp
              read(line0,1000,err=40) yy,imo,idd,ihh,imi,iss
c              print *,"line0: ",line0
1000          format(1x,i4,1x,i2,1x,i2,1x,i2,1x,i2,1x,i2)
c             resetting line0 because it will be used at the end of the loop
              line0="                   "
c              print *,yy,imo,idd,ihh,imi,iss
c             Get the day of year from month day
              jday=julian(imo,idd,yy)
              hhdec=float(ihh)+(float(imi)+float(iss)/60.)/60.
              djd=float(jday)+hhdec/24.
c             decide when it will be the end of the interval
c                djd_fim is subtracted by 15 because the
c                ceilometer scan rate is 15 seconds.
              if(nval .eq. 1 .or. primeiro) then
                  primeiro = .FALSE.
                  imi_f = (imi/iper)*iper + iper 
                  hhdec_fim= float(ihh) + float(imi_f)/60.
                  hhdec_ts= float(ihh) + float(imi_f-iper)/60.
c                  hhdec_ts= float(ihh) + float(imi)/60.
                  djd_fim= float(jday)+hhdec_fim/24.-15./86400.
                  djd_ts = float(jday)+hhdec_ts/24. 
                  jday_ts=jday
                  yy_ts=yy
c                  print*,imo,"/",idd,"/",yy," - ",hh,":",imi,":",iss
                  if(verbose) print*,"time_stamp: ",
     &                        yy_ts,jday_ts,djd_ts,hhdec_ts
              endif

c             line 1 - header & other stuff not really interesting...
              read(2,'(a8)',err=40,end=50) line1
              if(verbose) print *,"line 1:",line1

c             line 2 - cloud base & some warnings-------------------------
              read(2,1100,end=50,err=40) cnclvl,warn,(clvl(ii),ii=1,3),
     &               (istat(nval,ii),ii=1,12)
1100          format(a1,a1,3(1x,a5),1x,12(z1))
              read(cnclvl,'(i1)',err=111) nclvl
              goto 112
111             nclvl=0
112           continue

              if(warn .eq. "0") then
                   iwarn =0
              else if (warn .eq. "W") then
                   iwarn =1
              else if (warn .eq. "A") then
                   iwarn =2
              else
                   iwarn =9
              endif

              if (verbose) print *,"line2:",nclvl,iwarn," ",
     &                         (clvl(ii),ii=1,3)," ",
     &                         (istat(nval,ii),ii=1,12)

c             numerical values for the cloud base
              if(nclvl .eq. 4) nclvl =1
              if(nclvl .eq. 5) nclvl =0

              do 100 jj=1,3
                if(jj .le. nclvl) then
                  read(clvl(jj),*) clbase(nval,jj)
                else
                  clbase(nval,jj)=-9999.
                endif
100           continue
c              print *,(clbase(nval,jj),jj=1,3)
c             line 3 can be 2 things -------------------
              read(2,'(a44)',err=40,end=50) line3
              if(verbose) print *,"Line 3:",line3
              nlet = len_trim(line3)

c             In the begining there is an extra line, as an extension
c                for line 2, so I have to do this...
              if(nlet .eq. 35) then
c                   line 4 are the measurement parameters -------------------
                    read(2,'(a44)',err=40,end=50) line4
                    if(verbose) print *,"Line 4:",line4
              endif

c             writing to the log file
c              write(8,*) line0,iwarn,line3
c             now reading the backscatter ------------------------- 

c             print *,"Backscatter readings"       
              read(2,1200,err=40,end=50) (idat(kk),kk=1,nlvl)
1200          format(385z5)

              if(verbose) then
                   print *,"Before"
                   print *,(idat(kk),kk=1,nlvl)
              endif

              do 150 kk=1,nlvl
                 if(idat(kk) .ge. 524288) then
                        idat(kk)= idat(kk)-1048576
                 endif
                 dat(nval,kk)=float(idat(kk))
150           continue

              if(verbose) then
                   print *,"After"
                   print *,(idat(kk),kk=1,nlvl)
              endif

              if(geraraw) then
                  write(8,1400) yy,jday,hhdec,
     &                          iwarn,(istat(nval,kk),kk=1,12),
     &                          (clbase(nval,kk),kk=1,3),
     &                          (idat(kk),kk=1,nlvl)
1400              format(i4,1x,i3,1x,f8.5,13(1x,i2),
     &                   3(1x,f8.1),385(1x,i6))
              endif
c             find next time stamp, or if find "File closed" will 
c                read one more line and reach EOF.
              read(2,'(a20)',end=50) line0
              if(verbose) print *,"at end 1/2",line0
              read(2,'(a20)',end=50) line0
              if(verbose) print *,"at end 2/2",line0
              if(verbose) print *,"=========================="
        
c             Decide if go to next reading OR calculates,
c               reset and go to next reading OR find out if there is a
c               hole in the data -------------------------------------------------
              if(djd .lt. djd_fim) then
c                 go to next record
                  nval=nval+1
c                  print *,"==========================="
                  if(verbose) print *,"going to next record 1"
                  goto 40
              else
c                 hole in the data set, reset and go to next record
                  if(((djd - djd_fim)*24*60) .gt. float(iper)) then
                     do 400 ii=1,nlvl
                        dat(1,ii) = dat(nval,kk)
                        nval=2
                        primeiro=.TRUE.
400                  continue
c                    goto next record
                     nval=2
                     if(verbose) print *,"going to next record 2"
                     goto 40

                  else
c                     print *,"Calculating now!",yy_ts,jday_ts,hhdec_ts
                     call calcula(clbase,dat,maxpoints,nlvl,verbose,
     &                            nval,ncl,clbase_p,dat_p)

                     write(7,1300) yy_ts,djd_ts,nval,
     &                             (ncl(jj),jj=1,3),
     &                             (clbase_p(jj),jj=1,3),
     &                             (dat_p(jj),jj=1,nlvl)
1300                 format(i4,1x,f8.4,4(1x,i4),1x,3(f8.1),385(1x,f9.2))
c                     do 500 jj=1,16
c                          kki=(jj-1)*16
c                          print '(i2,1x,16f8.4)',jj,(dat_p(kk),
c     &                           kk=(kki+1),(kki+16))
c500                  continue
c                     print *,(ncl(jj),jj=1,3),(clbase_p(jj),jj=1,3)

c                    goto next record
                     nval=1
                     if(verbose) print *,"going to next record 3"
                     goto 40
                  endif
                  
              endif 
50        close(2)
          if (geraraw) close(8)
          print *,"going to next file"
          goto 11
99      continue
        if(nval .gt. 1) then
           call calcula(clbase,dat,maxpoints,nlvl,verbose,
     &                  nval,ncl,clbase_p,dat_p)

           write(7,1300) yy_ts,djd_ts,nval,
     &                   (ncl(jj),jj=1,3),
     &                   (clbase_p(jj),jj=1,3),
     &                   (dat_p(jj),jj=1,nlvl)
        endif
        close(1)
        close(7)
        close(8)
        close(9)
        print *,"End of processing"
        stop
        end
c  *****************************************************************
        subroutine calcula(clbase,dat,maxpoints,nlvl,verbose,
     &                     nval,ncl,clbase_p,dat_p)
        real dat(maxpoints,nlvl),dat_p(nlvl)
        real clbase(maxpoints,3),clbase_p(3)
        integer ncl(3),nbs(nlvl)
        logical verbose

        if(verbose) print *,"Entering in calcula"
c       zeroing values
        do 100 ii=1,3
           clbase_p(ii)=0.
           ncl(ii)=0
100     continue

        do 200 ii=1,nlvl
           dat_p(ii)=0.
           nbs(ii) = 0
200     continue

c       calculating the avg parameters:
        do 300 ii=1,nval
            do 320 jj=1,3
                if(clbase(ii,jj) .ne. -9999) then
                    clbase_p(jj)=clbase_p(jj)+clbase(ii,jj)
                    ncl(jj)=ncl(jj) + 1
                endif
320         continue
            do 370 jj=1,nlvl
                if(dat(ii,jj) .gt. 0) then
                    dat_p(jj)=dat_p(jj)+dat(ii,jj) 
                    nbs(jj) = nbs(jj) + 1
                endif
370         continue
300     continue
        if(verbose) then
            print *,"nval= ",nval
            print *,"Cloud base Sum: ",(clbase_p(jj),jj=1,3)
            print *,"Enter an integer to continue"
            read(*,*) lixo
        endif

c       cloud base averages
c          negative values are not counted!!!
        do 400 ii=1,3
            if(ncl(ii) .ne. 0) then
c               print *,"calcula>",ii,ncl(ii),clbase_p(ii)
               clbase_p(ii)=clbase_p(ii)/float(ncl(ii))
            else
               clbase_p(ii)=-9999.
            endif
400     continue

        if(verbose) print *,"Backscatter means"
c       backscatter averages
        do 500 ii=1,nlvl
c               print *,float(nval),dat_p(ii)
               if(nbs(ii) .gt. 0) then
                   dat_p(ii)=dat_p(ii)/float(nbs(ii))
               else
                   dat_p(ii)=-9999.
               endif
               if(verbose) print *,ii,dat_p(ii),nbs(ii)
500     continue
        if(verbose) then
            print *,"nval= ",nval
            print *,"Cloud base mean: ",(clbase_p(jj),jj=1,3)
            print *,"Enter an integer to continue"
            read(*,*) lixo
        endif

        return
        end
c  *****************************************************************
c  Function to calculate the day of the year
        function julian(month,day,year)
        integer month,day,year
        integer mday(12),leap
        DATA mday/0,31,59,90,120,151,181,212,243,273,304,334/
        julian=mday(month)+day
        leap=mod((year-2000),4)
        if ((leap.eq.0).and.(mo.gt.2)) then
                julian=julian+1
        endif
        return
        end

